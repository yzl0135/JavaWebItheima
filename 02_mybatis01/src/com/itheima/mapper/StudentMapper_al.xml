<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--

    namespace:命名空间
              不同的mapper映射文件使用namespace来做区分
              不同的mapper映射文件所使用的namespace的命名不允许出现重复

    使用命名空间.sqlId的形式来找到我们想要执行的sql语句

     test1.getById1

-->
<mapper namespace="test1">

    <!--

        sql语句必须要写在相应的标签当中
        <insert>:在标签对中写insert开头的sql语句 处理添加操作
        <update>:在标签对中写update开头的sql语句 处理修改操作
        <delete>:在标签对中写delete开头的sql语句 处理删除操作
        <select>:在标签对中写select开头的sql语句 处理查询操作

        parameterType:为sql语句传递的参数的类型

    -->

    <select id="getById" parameterType="java.lang.String" resultType="com.bjpowernode.domain.Student">

        select * from tbl_student where id=#{id}

    </select>

    <!--

        如果返回的是多条记录，那么resultType返回值类型，应该写为集合的泛型

    -->
    <select id="getAll" resultType="com.bjpowernode.domain.Student">

        select * from tbl_student

    </select>

    <!--

        注意：
            在未来实际项目开发中
            所有的标签都必须要写id属性
            <select>标签parameterType属性可以省略不写
                        resultType属性必须得写

            对于<insert><update><delete>这3个标签
            通常我们只写id属性，其他属性一概不写

    -->
    <insert id="save" parameterType="com.bjpowernode.domain.Student">

        insert into tbl_student(id,name,age) values(#{id},#{name},#{age})

    </insert>

    <update id="update">

        update tbl_student set name=#{name},age=#{age} where id=#{id}

    </update>

    <delete id="delete">

        delete from tbl_student where id=#{id}

    </delete>

</mapper>

























